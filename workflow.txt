4. Workflow: Arbeiten und Synchronisieren

Jetzt kommt der tÃ¤gliche Ablauf.

Am Anfang deiner Arbeitssession (auf jedem PC)

Bevor du mit dem Schreiben beginnst, hole dir immer den neuesten Stand aus dem Online-Repository.

    Ã–ffne den master-thesis Ordner in VS Code.

    Ã–ffne das Terminal direkt in VS Code (Strg + Ã– oder View > Terminal).

    FÃ¼hre den folgenden Befehl aus:
    Bash

    git pull

    Dieser Befehl lÃ¤dt alle Ã„nderungen herunter, die du z.B. am anderen PC gemacht hast.

WÃ¤hrend des Arbeitens

    Schreibe in den .tex Dateien.

    Um deine Arbeit als PDF zu sehen, Ã¶ffne die Haupt-.tex-Datei (z.B. thesis.tex). Klicke oben rechts auf das "Build LaTeX project"-Symbol (ein grÃ¼nes Dreieck) in der LaTeX Workshop Leiste.

    Die Vorschau (View LaTeX PDF) Ã¶ffnet sich automatisch in einem neuen Tab in VS Code.

Am Ende deiner Arbeitssession (auf jedem PC)

Wenn du deine Arbeit fÃ¼r den Tag beendest oder den Computer wechselst, speichere deine Ã„nderungen online.

    FÃ¼hre im VS Code Terminal die folgenden Befehle aus:
    Bash

    git add .
    git commit -m "Eine kurze Beschreibung deiner Ã„nderungen, z.B. 'Kapitel 2.1 Ã¼berarbeitet'"
    git push

    git add .: FÃ¼gt alle geÃ¤nderten Dateien zum "Paket" hinzu, das du schnÃ¼ren mÃ¶chtest.

    git commit -m "...": "Versiegelt" das Paket und gibt ihm eine Beschreibung. Gute Beschreibungen sind Gold wert!

    git push: LÃ¤dt das versiegelte Paket auf GitHub hoch.

Zusammenfassender Workflow

    Start: git pull

    Arbeiten: Schreiben, programmieren, kompilieren...

    Ende: git add ., git commit -m "...", git push

Wenn du diesen Ablauf beibehÃ¤ltst, sind dein Privat- und Arbeits-PC immer auf dem gleichen Stand und du hast zusÃ¤tzlich eine vollstÃ¤ndige Historie deiner Arbeit. Viel Erfolg bei deiner Masterarbeit! ğŸš€